{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev:api-gateway": "nest start api-gateway --watch",
    "start:dev:user": "nest start user --watch",
    "start:dev:auth": "nest start auth --watch",
    "start:dev:task": "nest start task-service --watch",
    "start:dev:redis": "nest start redis --watch",
    "start:dev:gmail": "nest start gmail --watch",
    "start:dev:notification": "nest start notification --watch",
    "start:dev:video-chat": "nest start video-chat --watch",
    "start:dev:chat": "nest start chat --watch",
    "start:dev:chatbot": "nest start chatbot --watch",
    "start:dev:all": "start cmd /k \"npm run start:dev:api-gateway\" && start cmd /k \"npm run start:dev:user\" && start cmd /k \"npm run start:dev:auth\" && start cmd /k \"npm run start:dev:task\" && start cmd /k \"npm run start:dev:redis\" && start cmd /k \"npm run start:dev:gmail\" && start cmd /k \"npm run start:dev:notification\"",
    "start:dev:chatbot:test": "start cmd /k \"npm run start:dev:api-gateway\" && start cmd /k \"npm run start:dev:user\" && start cmd /k \"npm run start:dev:auth\" &&  start cmd /k \"npm run start:dev:notification\" && start cmd /k \"npm run start:dev:chatbot\"",
    "start:dev:chat:test": "start cmd /k \"npm run start:dev:api-gateway\" && start cmd /k \"npm run start:dev:user\" && start cmd /k \"npm run start:dev:auth\" &&  start cmd /k \"npm run start:dev:notification\" && start cmd /k \"npm run start:dev:chat\" && start cmd /k \"npm run start:dev:team\"",
    
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/apps/backend/main",
    "start:all": "concurrently -n api,auth,user,task,redis,notification,gmail \"npm:start:api\" \"npm:start:auth\" \"npm:start:user\" \"npm:start:task\" \"npm:start:redis\" \"npm:start:notification\" \"npm:start:gmail\"",
    "start:api": "cross-env DEBUG=@golevelup/nestjs-rabbitmq* nest start api-gateway --watch",
    "start:auth": "cross-env DEBUG=@golevelup/nestjs-rabbitmq* nest start auth --watch",
    "start:user": "nest start user --watch",
    "start:task": "nest start task-service --watch",
    "start:socket": "nest start socket --watch",
    "start:team": "nest start team --watch",
    "start:chat": "nest start chat --watch",
    "start:redis": "nest start redis --watch",
    "start:gmail": "nest start gmail --watch",
    "start:search": "nest start search --watch",
    "start:notification": "nest start notification --watch",
    "start:video-chat": "nest start video-chat --watch",
    "start:core": "concurrently -n api,auth,user,redis, gmail \"npm:start:api\" \"npm:start:auth\" \"npm:start:user\" \"npm:start:redis\" \"npm:start:gmail\" \"npm:start:video-chat\"",
    "lint": "node --max-old-space-size=4096 node_modules/eslint/bin/eslint.js \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/backend/test/jest-e2e.json"
  },
  "dependencies": {
    "@golevelup/nestjs-rabbitmq": "^6.0.2",
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/axios": "^4.0.1",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/jwt": "^11.0.1",
    "@nestjs/mapped-types": "*",
    "@nestjs/microservices": "^11.1.6",
    "@nestjs/mongoose": "^11.0.3",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/typeorm": "^11.0.0",
    "@prisma/client": "^6.17.1",
    "@socket.io/redis-adapter": "^8.3.0",
    "@types/multer": "^2.0.0",
    "@types/passport-google-oauth20": "^2.0.16",
    "amqp-connection-manager": "^5.0.0",
    "amqplib": "^0.10.9",
    "axios": "^1.12.2",
    "bcrypt": "^6.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cookie-parser": "^1.4.7",
    "dayjs": "^1.11.18",
    "googleapis": "^162.0.0",
    "ioredis": "^5.8.1",
    "joi": "^18.0.1",
    "meilisearch": "^0.53.0",
    "minio": "^8.0.6",
    "mongoose": "^8.19.1",
    "nodemailer": "^7.0.9",
    "passport": "^0.7.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.16.3",
    "postgres": "^3.4.7",
    "redis": "^5.8.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "socket.io": "^4.8.1",
    "swagger-ui-express": "^5.0.1",
    "typeorm": "^0.3.27"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.37.0",
    "@nestjs/cli": "^11.0.10",
    "@nestjs/schematics": "^11.0.9",
    "@nestjs/testing": "^11.1.6",
    "@types/bcrypt": "^6.0.0",
    "@types/cookie": "^0.6.0",
    "@types/cookie-parser": "^1.4.9",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.7.2",
    "@types/nodemailer": "^7.0.2",
    "@types/passport-google-oauth2": "^0.1.10",
    "@types/passport-google-oauth20": "^2.0.16",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.3",
    "concurrently": "^9.2.1",
    "cross-env": "^10.1.0",
    "eslint": "^9.37.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "globals": "^16.4.0",
    "jest": "^30.2.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.6.2",
    "prisma": "^6.17.1",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.5",
    "ts-loader": "^9.5.4",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.9.3",
    "typescript-eslint": "^8.46.1"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@app/common(|/.*)$": "<rootDir>/libs/common/src/$1"
    }
  }
}
